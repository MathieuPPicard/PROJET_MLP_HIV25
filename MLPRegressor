from sklearn.neural_network import MLPRegressor
from MLPClassifier import X_train, X_test, y_train, y_test

# Replacing the model with MLPRegressor for regression tasks
mlp_regressor = MLPRegressor(hidden_layer_sizes=(100,), max_iter=500, activation='relu', solver='adam', random_state=42)

# Training the regressor model
mlp_regressor.fit(X_train, y_train)

# Making predictions
y_pred_regressor = mlp_regressor.predict(X_test)

# Evaluate with R2 score or other regression metrics
from sklearn.metrics import mean_squared_error
mse = mean_squared_error(y_test, y_pred_regressor)
print(f"Mean Squared Error: {mse:.2f}")
